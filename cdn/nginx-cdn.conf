# CDN Configuration for Static Assets
# This simulates a CDN setup for development

worker_processes 1;
error_log logs/cdn_error.log;
pid logs/cdn_nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       E:/ClioTest2/nginx/nginx-1.24.0/conf/mime.types;
    default_type  application/octet-stream;
    
    # CDN-specific logging
    log_format cdn_main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" cache=$upstream_cache_status '
                        'rt=$request_time';

    access_log logs/cdn_access.log cdn_main;

    # Compression for CDN
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 9;  # Maximum compression for CDN
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # CDN Cache zones
    proxy_cache_path cache/static levels=1:2 keys_zone=static_cache:100m 
                     max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_path cache/api levels=1:2 keys_zone=api_cache:50m 
                     max_size=500m inactive=30m use_temp_path=off;

    # CDN Server (port 8080)
    server {
        listen 8080;
        server_name cdn.medlearn.local localhost;
        
        # Static assets with aggressive caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|pdf|zip)$ {
            root E:/ClioTest2/public;
            
            # CDN Cache settings
            proxy_cache static_cache;
            proxy_cache_valid 200 1y;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            
            # Cache headers
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status $upstream_cache_status;
            add_header X-CDN "MedLearn-CDN-Sim";
            
            # Security headers for static content
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options DENY;
            
            # CORS for fonts and assets
            location ~* \.(woff|woff2|ttf|eot)$ {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, Content-Type";
            }
        }
        
        # API responses with shorter cache
        location /api/ {
            proxy_pass http://127.0.0.1:80;
            
            # API Cache settings
            proxy_cache api_cache;
            proxy_cache_valid 200 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating;
            proxy_cache_bypass $cookie_nocache $arg_nocache;
            
            # Headers
            add_header X-Cache-Status $upstream_cache_status;
            add_header X-CDN "MedLearn-API-CDN";
            
            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # Health check for CDN
        location /cdn/health {
            access_log off;
            return 200 '{"status":"ok","cdn":"active","cache_zones":["static_cache","api_cache"]}';
            add_header Content-Type application/json;
        }
        
        # Cache purge endpoint (development only) 
        location /cdn/purge {
            allow 127.0.0.1;
            deny all;
            
            return 200 '{"status":"cache_purged","message":"Cache purging not available in standard nginx"}';
            add_header Content-Type application/json;
        }
    }
}