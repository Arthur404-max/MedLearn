function checkAuth(){const token = localStorage.getItem('token');if(!token){const protectedPages = ['dashboard.html','testing.html','resources.html','subscription.html'];const currentPage = window.location.pathname.split('/').pop();if(protectedPages.includes(currentPage)){window.location.href = 'auth.html';return false;}}return true;}function logout(){localStorage.removeItem('token');localStorage.removeItem('user');window.location.href = 'index.html';}if(document.getElementById('loginForm')){document.getElementById('loginForm').addEventListener('submit',async(e)=>{e.preventDefault();const email = document.getElementById('email').value;const password = document.getElementById('password').value;const errorElement = document.getElementById('errorMessage');try{const response = await fetch('/api/auth/login',{method: 'POST',headers:{'Content-Type': 'application/json'},body: JSON.stringify({email,password})});const data = await response.json();if(response.ok){localStorage.setItem('token',data.token);localStorage.setItem('user',JSON.stringify(data.user));window.location.href = 'dashboard.html';}else{errorElement.style.display = 'block';errorElement.textContent = data.message;if(data.emailNotVerified){errorElement.innerHTML = data.message + '<br><a href="verify-email.html" style="color: var(--primary-color);text-decoration: underline;">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å email</a>';}}}catch(error){errorElement.style.display = 'block';errorElement.textContent = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ';}});}if(document.getElementById('registerForm')){document.getElementById('registerForm').addEventListener('submit',async(e)=>{e.preventDefault();const firstName = document.getElementById('firstName').value;const lastName = document.getElementById('lastName').value;const email = document.getElementById('email').value;const password = document.getElementById('password').value;const confirmPassword = document.getElementById('confirmPassword').value;const errorElement = document.getElementById('errorMessage');if(password !== confirmPassword){errorElement.style.display = 'block';errorElement.textContent = '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç';return;}try{const response = await fetch('/api/auth/register',{method: 'POST',headers:{'Content-Type': 'application/json'},body: JSON.stringify({firstName,lastName,email,password})});const data = await response.json();if(response.ok){if(data.verificationRequired){alert('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ email –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –í –∫–æ–Ω—Å–æ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≤—ã –Ω–∞–π–¥–µ—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏(–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –æ–Ω–∞ –ø—Ä–∏–¥–µ—Ç –Ω–∞ –ø–æ—á—Ç—É).');window.location.href = 'verify-email.html';}else{localStorage.setItem('token',data.token);localStorage.setItem('user',JSON.stringify(data.user));window.location.href = 'dashboard.html';}}else{errorElement.style.display = 'block';errorElement.textContent = data.message;}}catch(error){errorElement.style.display = 'block';errorElement.textContent = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏';}});}async function loadUserProfile(){try{const response = await fetch('/api/auth/profile',{headers:{'Authorization': `Bearer ${localStorage.getItem('token')}`}});const data = await response.json();if(response.ok){document.getElementById('userName').textContent = data.firstName || '–°—Ç—É–¥–µ–Ω—Ç';document.getElementById('userEmail').value = data.email || '';document.getElementById('userFirstName').value = data.firstName || '';document.getElementById('userLastName').value = data.lastName || '';document.getElementById('userRole').value = data.role || 'student';document.getElementById('registrationDate').value = new Date(data.createdAt).toLocaleDateString('ru-RU');}}catch(error){console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:',error);}}async function loadUserStats(){try{const response = await fetch('/api/stats/testing',{headers:{'Authorization': `Bearer ${localStorage.getItem('token')}`}});const data = await response.json();if(response.ok){document.getElementById('totalTests').textContent = data.totalTests || 0;document.getElementById('averageScore').textContent =(data.averageScore || 0)+ '%';document.getElementById('studyDays').textContent = data.studyDays || 0;}}catch(error){console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:',error);}}async function loadAchievements(){try{const response = await fetch('/api/stats/achievements',{headers:{'Authorization': `Bearer ${localStorage.getItem('token')}`}});const data = await response.json();if(response.ok){document.getElementById('achievements').textContent = data.length || 0;const achievementsList = document.getElementById('achievementsList');if(achievementsList){if(data.length === 0){achievementsList.innerHTML = ` <div style="text-align: center;color: var(--text-light);padding: 2rem;"> –ü—Ä–æ–π–¥–∏—Ç–µ –ø–µ—Ä–≤—ã–π —Ç–µ—Å—Ç,—á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è! </div> `;}else{achievementsList.innerHTML = data.map(achievement => ` <div style="display: flex;align-items: center;padding: 1rem;background: var(--bg-secondary);border-radius: 8px;margin-bottom: 1rem;"> <div style="font-size: 2rem;margin-right: 1rem;">${achievement.icon || 'üèÜ'}</div> <div> <h4 style="margin: 0;color: var(--text-primary);">${achievement.name}</h4> <p style="margin: 0;color: var(--text-secondary);font-size: 0.9rem;">${achievement.description}</p> </div> </div> `).join('');}}}}catch(error){console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:',error);}}async function loadSubjects(){try{const response = await fetch('/api/tests/subjects',{headers:{'Authorization': `Bearer ${localStorage.getItem('token')}`}});const data = await response.json();if(response.ok){const subjectsGrid = document.getElementById('subjectsGrid');if(subjectsGrid){subjectsGrid.innerHTML = data.map(subject => ` <div class="card" onclick="selectSubject(${subject.id})" style="cursor: pointer;"> <div class="card-body" style="text-align: center;"> <div style="font-size: 3rem;margin-bottom: 1rem;">${getSubjectIcon(subject.name)}</div> <h3 class="card-title">${subject.name}</h3> <p class="card-subtitle">${subject.description}</p> </div> </div> `).join('');}}}catch(error){console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤:',error);}}function getSubjectIcon(subjectName){const icons ={'–ê–Ω–∞—Ç–æ–º–∏—è': 'ü¶¥','–§–∏–∑–∏–æ–ª–æ–≥–∏—è': '‚ù§Ô∏è','–ü–∞—Ç–æ–ª–æ–≥–∏—è': 'üî¨','–§–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏—è': 'üíä','–¢–µ—Ä–∞–ø–∏—è': 'ü©∫','–•–∏—Ä—É—Ä–≥–∏—è': '‚öîÔ∏è'};return icons[subjectName] || 'üìö';}function selectSubject(subjectId){window.currentSubjectId = subjectId;loadCategories(subjectId);showSection('categorySelection');}async function loadCategories(subjectId){try{const categoriesResponse = await fetch(`/api/tests/categories/${subjectId}`,{headers:{'Authorization': `Bearer ${localStorage.getItem('token')}`}});const testsResponse = await fetch(`/api/tests/subject/${subjectId}`,{headers:{'Authorization': `Bearer ${localStorage.getItem('token')}`}});const categoriesData = await categoriesResponse.json();const testsData = testsResponse.json ? await testsResponse.json(): [];if(categoriesResponse.ok){const categoriesGrid = document.getElementById('categoriesGrid');if(categoriesGrid){let html = '';if(categoriesData.length > 0){html += categoriesData.map(category => ` <div class="card" onclick="selectCategory(${category.id})" style="cursor: pointer;"> <div class="card-body"> <h3 class="card-title">${category.name}</h3> <p class="card-subtitle">${category.description}</p> <small class="text-muted">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</small> </div> </div> `).join('');}if(testsData.length > 0){html += testsData.map(test => ` <div class="card" onclick="startTestBySubject(${test.id},'${test.title}')" style="cursor: pointer;border-left: 3px solid #007bff;"> <div class="card-body"> <h3 class="card-title">${test.title}</h3> <p class="card-subtitle">${test.description || '–¢–µ—Å—Ç –∏–∑ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏'}</p> <small class="text-muted">–¢–µ—Å—Ç(–Ω–∞–ø—Ä—è–º—É—é)</small> </div> </div> `).join('');}if(html === ''){html = '<div class="text-center text-muted">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–ª–∏ —Ç–µ—Å—Ç–æ–≤</div>';}categoriesGrid.innerHTML = html;}}}catch(error){console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:',error);}}function selectCategory(categoryId){window.currentCategoryId = categoryId;loadSubcategories(categoryId);showSection('subcategorySelection');}async function loadSubcategories(categoryId){try{const response = await fetch(`/api/tests/subcategories/${categoryId}`,{headers:{'Authorization': `Bearer ${localStorage.getItem('token')}`}});const data = await response.json();if(response.ok){const subcategoriesGrid = document.getElementById('subcategoriesGrid');if(subcategoriesGrid){subcategoriesGrid.innerHTML = data.map(subcategory => ` <div class="card" onclick="startTest(${subcategory.id})" style="cursor: pointer;"> <div class="card-body"> <h3 class="card-title">${subcategory.name}</h3> <p class="card-subtitle">${subcategory.description}</p> <div style="margin-top: 1rem;"> <span class="btn btn-primary" style="padding: 0.5rem 1rem;font-size: 0.9rem;"> –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç </span> </div> </div> </div> `).join('');}}}catch(error){console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π:',error);}}function showSection(sectionId){const sections = ['subjectSelection','categorySelection','subcategorySelection','testContainer','resultsContainer'];sections.forEach(section =>{const element = document.getElementById(section);if(element){element.style.display = section === sectionId ? 'block' : 'none';}});}function showSubjects(){showSection('subjectSelection');}function showCategories(){if(window.currentSubjectId){loadCategories(window.currentSubjectId);showSection('categorySelection');}}async function startTestBySubject(testId,testTitle){try{const response = await fetch(`/api/tests/start-by-id/${testId}`,{headers:{'Authorization': `Bearer ${localStorage.getItem('token')}`}});const data = await response.json();if(response.ok){window.currentTest = data;window.currentQuestionIndex = 0;window.userAnswers = [];showSection('testContainer');displayQuestion();startTimer(data.timeLimit || 15);}else{alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ—Å—Ç–∞: ' + data.message);}}catch(error){console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞:',error);alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è');}}async function startTest(subcategoryId){try{const response = await fetch(`/api/tests/start/${subcategoryId}`,{headers:{'Authorization': `Bearer ${localStorage.getItem('token')}`}});const data = await response.json();if(response.ok){window.currentTest = data;window.currentQuestionIndex = 0;window.userAnswers = [];showSection('testContainer');displayQuestion();startTimer(data.timeLimit || 15);}}catch(error){console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞:',error);alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç');}}function displayQuestion(){const test = window.currentTest;const questionIndex = window.currentQuestionIndex;const question = test.questions[questionIndex];document.getElementById('testTitle').textContent = test.title;document.getElementById('testProgress').textContent = `–í–æ–ø—Ä–æ—Å ${questionIndex + 1}–∏–∑ ${test.questions.length}`;document.getElementById('questionText').textContent = question.question_text;const answersContainer = document.getElementById('answersContainer');answersContainer.innerHTML = question.options.map((option,index)=> ` <label class="card" style="cursor: pointer;padding: 1rem;margin: 0;" onclick="selectAnswer(${index})"> <input type="radio" name="answer" value="${index}" style="margin-right: 0.5rem;"> ${option}</label> `).join('');if(window.userAnswers[questionIndex] !== undefined){const radio = answersContainer.querySelector(`input[value="${window.userAnswers[questionIndex]}"]`);if(radio)radio.checked = true;}document.getElementById('prevBtn').disabled = questionIndex === 0;document.getElementById('nextBtn').textContent = questionIndex === test.questions.length - 1 ? '–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç' : '–°–ª–µ–¥—É—é—â–∏–π';}function selectAnswer(answerIndex){window.userAnswers[window.currentQuestionIndex] = answerIndex;}function previousQuestion(){if(window.currentQuestionIndex > 0){window.currentQuestionIndex--;displayQuestion();}}function nextQuestion(){const test = window.currentTest;if(window.currentQuestionIndex < test.questions.length - 1){window.currentQuestionIndex++;displayQuestion();}else{finishTest();}}async function finishTest(){try{const response = await fetch('/api/tests/finish',{method: 'POST',headers:{'Content-Type': 'application/json','Authorization': `Bearer ${localStorage.getItem('token')}`},body: JSON.stringify({testId: window.currentTest.id,answers: window.userAnswers})});const data = await response.json();if(response.ok){displayResults(data);}}catch(error){console.error('–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ—Å—Ç–∞:',error);alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç');}}function displayResults(results){document.getElementById('scorePercentage').textContent = Math.round(results.percentage)+ '%';document.getElementById('scoreDetails').textContent = `–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${results.correctAnswers}–∏–∑ ${window.currentTest.questions.length}`;const percentage = results.percentage;let emoji = 'üìö';let message = '–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏–∑—É—á–µ–Ω–∏–µ!';if(percentage >= 90){emoji = 'üèÜ';message = '–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!';}else if(percentage >= 75){emoji = 'üéØ';message = '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!';}else if(percentage >= 60){emoji = 'üëç';message = '–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!';}document.getElementById('resultEmoji').textContent = emoji;document.getElementById('resultMessage').textContent = message;showSection('resultsContainer');checkNewAchievements();}async function checkNewAchievements(){try{await fetch('/api/stats/check-achievements',{method: 'POST',headers:{'Authorization': `Bearer ${localStorage.getItem('token')}`}});}catch(error){console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:',error);}}function startTimer(minutes){let timeLeft = minutes * 60;const timer = document.getElementById('timer');window.testTimer = setInterval(()=>{const mins = Math.floor(timeLeft / 60);const secs = timeLeft % 60;timer.textContent = `${mins}:${secs.toString().padStart(2,'0')}`;if(timeLeft <= 0){clearInterval(window.testTimer);finishTest();}timeLeft--;},1000);}async function loadCurrentSubscription(){try{const response = await fetch('/api/subscriptions/current',{headers:{'Authorization': `Bearer ${localStorage.getItem('token')}`}});const data = await response.json();if(response.ok && data.subscription){const sub = data.subscription;const currentPlan = document.getElementById('currentPlan');const planDescription = document.getElementById('planDescription');const planExpiry = document.getElementById('planExpiry');const planPrice = document.getElementById('planPrice');const planStatus = document.getElementById('planStatus');if(currentPlan)currentPlan.textContent = sub.plan_name;if(planDescription)planDescription.textContent = getSubPlanDescription(sub.plan_type);if(planExpiry)planExpiry.textContent = new Date(sub.end_date).toLocaleDateString('ru-RU');if(planPrice)planPrice.textContent = sub.price + '‚ÇΩ';if(planStatus)planStatus.textContent = sub.is_active ? '‚úÖ –ê–∫—Ç–∏–≤–Ω–∞' : '‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–∞';}else{const currentPlan = document.getElementById('currentPlan');const planDescription = document.getElementById('planDescription');if(currentPlan)currentPlan.textContent = '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏';if(planDescription)planDescription.textContent = '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–ª–∞–Ω';}}catch(error){console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏:',error);}}function getSubPlanDescription(planType){const descriptions ={'basic': '–ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è','premium': '–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å AI','yearly': '–ì–æ–¥–æ–≤–æ–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º'};return descriptions[planType] || '–û–ø–∏—Å–∞–Ω–∏–µ –ø–ª–∞–Ω–∞';}