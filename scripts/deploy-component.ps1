# –£–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è production –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
param(
    [Parameter(Mandatory=$true)]
    [ValidateSet("check", "redis", "pm2", "nginx", "cdn", "admin")]
    [string]$Component,
    
    [Parameter(Mandatory=$false)]
    [ValidateSet("start", "stop", "status")]
    [string]$Action = "start"
)

$ProjectRoot = "E:\ClioTest2"

function Show-Header {
    param($Title)
    Write-Host "üîß $Title" -ForegroundColor Cyan -BackgroundColor Black
    Write-Host ""
}

Set-Location $ProjectRoot

switch ($Component) {
    "check" {
        Show-Header "–°–ò–°–¢–ï–ú–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê"
        
        # Redis
        try {
            wsl -d Ubuntu -- redis-cli ping | Out-Null
            Write-Host "‚úÖ Redis: —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
        } catch {
            Write-Host "‚ùå Redis: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
        }
        
        # PM2
        try {
            $pmOutput = pm2 list 2>$null
            if ($pmOutput -match "online") {
                Write-Host "‚úÖ PM2: –ø—Ä–æ—Ü–µ—Å—Å—ã –∞–∫—Ç–∏–≤–Ω—ã" -ForegroundColor Green
            } else {
                Write-Host "‚ùå PM2: –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã" -ForegroundColor Red
            }
        } catch {
            Write-Host "‚ùå PM2: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
        }
        
        # Nginx
        if (Get-Process nginx -ErrorAction SilentlyContinue) {
            Write-Host "‚úÖ Nginx: –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Nginx: –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Red
        }
        
        # CDN
        try {
            Invoke-WebRequest -Uri "http://localhost:8080" -TimeoutSec 3 | Out-Null
            Write-Host "‚úÖ CDN: –¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Green
        } catch {
            Write-Host "‚ùå CDN: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
        }
        
        # Admin Panel
        try {
            Invoke-WebRequest -Uri "http://localhost:3002" -TimeoutSec 3 | Out-Null
            Write-Host "‚úÖ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: –¥–æ—Å—Ç—É–ø–Ω–∞" -ForegroundColor Green
        } catch {
            Write-Host "‚ùå –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞" -ForegroundColor Red
        }
        
        # Main Server
        try {
            Invoke-WebRequest -Uri "http://localhost:3000" -TimeoutSec 3 | Out-Null
            Write-Host "‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä: –¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Green
        } catch {
            Write-Host "‚ùå –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
        }
        
        Write-Host ""
        Write-Host "üéØ –ü–û–†–¢–´:" -ForegroundColor Yellow
        Write-Host "  3000 - –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä"
        Write-Host "  3002 - –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å" 
        Write-Host "  8080 - CDN —Å–µ—Ä–≤–µ—Ä"
    }
    
    "redis" {
        Show-Header "REDIS MANAGEMENT"
        switch ($Action) {
            "start" { 
                Write-Host "üöÄ –ó–∞–ø—É—Å–∫ Redis..." -ForegroundColor Yellow
                wsl -d Ubuntu -- sudo service redis-server start
                Start-Sleep 2
                wsl -d Ubuntu -- redis-cli ping
            }
            "stop" { 
                Write-Host "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Redis..." -ForegroundColor Yellow
                wsl -d Ubuntu -- sudo service redis-server stop
            }
            "status" { 
                Write-Host "üìä –°—Ç–∞—Ç—É—Å Redis:" -ForegroundColor Yellow
                try {
                    $result = wsl -d Ubuntu -- redis-cli ping
                    Write-Host "‚úÖ Redis: $result" -ForegroundColor Green
                } catch {
                    Write-Host "‚ùå Redis: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
                }
            }
        }
    }
    
    "pm2" {
        Show-Header "PM2 MANAGEMENT"
        switch ($Action) {
            "start" { 
                Write-Host "üöÄ –ó–∞–ø—É—Å–∫ PM2 –∫–ª–∞—Å—Ç–µ—Ä–∞..." -ForegroundColor Yellow
                npm run pm2:start
            }
            "stop" { 
                Write-Host "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2..." -ForegroundColor Yellow
                pm2 stop all
                pm2 delete all
            }
            "status" { 
                Write-Host "üìä –°—Ç–∞—Ç—É—Å PM2:" -ForegroundColor Yellow
                pm2 list --no-color
            }
        }
    }
    
    "nginx" {
        Show-Header "NGINX MANAGEMENT"
        switch ($Action) {
            "start" { 
                Write-Host "üöÄ –ó–∞–ø—É—Å–∫ Nginx..." -ForegroundColor Yellow
                nginx
                Write-Host "‚úÖ Nginx –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Green
            }
            "stop" { 
                Write-Host "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Nginx..." -ForegroundColor Yellow
                nginx -s quit
            }
            "status" { 
                Write-Host "üìä –°—Ç–∞—Ç—É—Å Nginx:" -ForegroundColor Yellow
                if (Get-Process nginx -ErrorAction SilentlyContinue) {
                    Write-Host "‚úÖ Nginx: –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Green
                } else {
                    Write-Host "‚ùå Nginx: –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Red
                }
            }
        }
    }
    
    "cdn" {
        Show-Header "CDN MANAGEMENT"
        switch ($Action) {
            "start" { 
                Write-Host "üöÄ –ó–∞–ø—É—Å–∫ CDN —Å–µ—Ä–≤–µ—Ä–∞..." -ForegroundColor Yellow
                Start-Process powershell -ArgumentList "-NoExit", "-Command", "cd '$ProjectRoot\cdn'; node cdn-server.js"
                Start-Sleep 3
                try {
                    Invoke-WebRequest -Uri "http://localhost:8080" -TimeoutSec 3 | Out-Null
                    Write-Host "‚úÖ CDN –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080" -ForegroundColor Green
                } catch {
                    Write-Host "‚ö†Ô∏è CDN –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è..." -ForegroundColor Yellow
                }
            }
            "stop" { 
                Write-Host "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ CDN..." -ForegroundColor Yellow
                $netstatOutput = netstat -ano | Select-String ":8080"
                if ($netstatOutput) {
                    foreach ($line in $netstatOutput) {
                        $parts = $line -split '\s+'
                        $processId = $parts[-1]
                        if ($processId -match '^\d+$') {
                            Stop-Process -Id $processId -Force -ErrorAction SilentlyContinue
                        }
                    }
                    Write-Host "‚úÖ CDN –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
                }
            }
            "status" { 
                Write-Host "üìä –°—Ç–∞—Ç—É—Å CDN:" -ForegroundColor Yellow
                try {
                    Invoke-WebRequest -Uri "http://localhost:8080" -TimeoutSec 3 | Out-Null
                    Write-Host "‚úÖ CDN: –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080" -ForegroundColor Green
                } catch {
                    Write-Host "‚ùå CDN: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
                }
            }
        }
    }
    
    "admin" {
        Show-Header "ADMIN PANEL MANAGEMENT"
        switch ($Action) {
            "start" { 
                Write-Host "üöÄ –ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏..." -ForegroundColor Yellow
                Start-Process powershell -ArgumentList "-NoExit", "-Command", "cd '$ProjectRoot\admin-panel'; node server.js"
                Start-Sleep 3
                try {
                    Invoke-WebRequest -Uri "http://localhost:3002" -TimeoutSec 3 | Out-Null
                    Write-Host "‚úÖ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –∑–∞–ø—É—â–µ–Ω–∞: http://localhost:3002" -ForegroundColor Green
                    Write-Host "üîê –ü–∞—Ä–æ–ª—å: admin2024" -ForegroundColor Yellow
                } catch {
                    Write-Host "‚ö†Ô∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è..." -ForegroundColor Yellow
                }
            }
            "stop" { 
                Write-Host "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏..." -ForegroundColor Yellow
                $netstatOutput = netstat -ano | Select-String ":3002"
                if ($netstatOutput) {
                    foreach ($line in $netstatOutput) {
                        $parts = $line -split '\s+'
                        $processId = $parts[-1]
                        if ($processId -match '^\d+$') {
                            Stop-Process -Id $processId -Force -ErrorAction SilentlyContinue
                        }
                    }
                    Write-Host "‚úÖ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞" -ForegroundColor Green
                }
            }
            "status" { 
                Write-Host "üìä –°—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏:" -ForegroundColor Yellow
                try {
                    Invoke-WebRequest -Uri "http://localhost:3002" -TimeoutSec 3 | Out-Null
                    Write-Host "‚úÖ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ http://localhost:3002" -ForegroundColor Green
                } catch {
                    Write-Host "‚ùå –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞" -ForegroundColor Red
                }
            }
        }
    }
}