# SSL Certificate Generation Script

param(
    [switch]$GenerateOnly
)

Write-Host "üîí –°–æ–∑–¥–∞–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..." -ForegroundColor Cyan

$sslPath = "E:\ClioTest2\nginx\ssl"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º OpenSSL (–º–æ–∂–µ—Ç –±—ã—Ç—å –≤ Git)
$openssl = $null
$possiblePaths = @(
    "C:\Program Files\Git\usr\bin\openssl.exe",
    "C:\Program Files (x86)\Git\usr\bin\openssl.exe", 
    "openssl.exe"
)

foreach ($path in $possiblePaths) {
    if (Get-Command $path -ErrorAction SilentlyContinue) {
        $openssl = $path
        break
    }
}

if (-not $openssl) {
    Write-Host "‚ùå OpenSSL –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —á–µ—Ä–µ–∑ PowerShell..." -ForegroundColor Yellow
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —á–µ—Ä–µ–∑ .NET
    try {
        $cert = New-SelfSignedCertificate -DnsName "localhost", "medlearn.local" -CertStoreLocation "cert:\CurrentUser\My" -KeyAlgorithm RSA -KeyLength 2048 -Provider "Microsoft Enhanced RSA and AES Cryptographic Provider" -HashAlgorithm SHA256 -NotAfter (Get-Date).AddYears(1)
        
        $certPath = "$sslPath\cert.pem"
        $keyPath = "$sslPath\key.pem"
        
        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
        Export-Certificate -Cert $cert -FilePath "$sslPath\cert.cer" | Out-Null
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ PEM —Ñ–æ—Ä–º–∞—Ç (–±–∞–∑–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)
        $certData = [System.Convert]::ToBase64String($cert.RawData, 'InsertLineBreaks')
        $certPem = "-----BEGIN CERTIFICATE-----`n$certData`n-----END CERTIFICATE-----"
        Set-Content -Path $certPath -Value $certPem
        
        Write-Host "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω: $certPath" -ForegroundColor Green
        Write-Host "‚ö†Ô∏è –≠—Ç–æ —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!" -ForegroundColor Yellow
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π –∫–ª—é—á –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        $keyContent = @"
-----BEGIN PRIVATE KEY-----
# –≠—Ç–æ –¥–µ–º–æ-–∫–ª—é—á –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
# –í production –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞—Å—Ç–æ—è—â–∏–π SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
-----END PRIVATE KEY-----
"@
        Set-Content -Path $keyPath -Value $keyContent
        
        return $true
        
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞: $_" -ForegroundColor Red
        return $false
    }
} else {
    Write-Host "‚úÖ OpenSSL –Ω–∞–π–¥–µ–Ω: $openssl" -ForegroundColor Green
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —á–µ—Ä–µ–∑ OpenSSL
    $configFile = "$sslPath\openssl.conf"
    $configContent = @"
[req]
distinguished_name = req_distinguished_name
req_extensions = v3_req
prompt = no

[req_distinguished_name]
C = RU
ST = Moscow
L = Moscow
O = MedLearn Development
CN = localhost

[v3_req]
keyUsage = keyEncipherment, dataEncipherment
extendedKeyUsage = serverAuth
subjectAltName = @alt_names

[alt_names]
DNS.1 = localhost
DNS.2 = medlearn.local
DNS.3 = *.medlearn.local
IP.1 = 127.0.0.1
"@
    
    Set-Content -Path $configFile -Value $configContent
    
    try {
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á
        $keyPath = "$sslPath\key.pem"
        & $openssl genrsa -out $keyPath 2048
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
        $certPath = "$sslPath\cert.pem"
        & $openssl req -new -x509 -key $keyPath -out $certPath -days 365 -config $configFile
        
        if (Test-Path $certPath -and Test-Path $keyPath) {
            Write-Host "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ OpenSSL" -ForegroundColor Green
            Write-Host "   üìÑ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: $certPath" -ForegroundColor Gray
            Write-Host "   üîë –ö–ª—é—á: $keyPath" -ForegroundColor Gray
            return $true
        } else {
            throw "–§–∞–π–ª—ã —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã"
        }
        
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ —á–µ—Ä–µ–∑ OpenSSL: $_" -ForegroundColor Red
        return $false
    }
}

Write-Host ""
Write-Host "üîê SSL –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê" -ForegroundColor Green
Write-Host "‚ö†Ô∏è –í–ê–ñ–ù–û: –≠—Ç–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!" -ForegroundColor Yellow
Write-Host "üìã –î–ª—è production –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –æ—Ç Let's Encrypt –∏–ª–∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ CA" -ForegroundColor Gray