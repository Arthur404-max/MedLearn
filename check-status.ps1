# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã MedLearn
Write-Host '========================================' -ForegroundColor Cyan
Write-Host 'üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã MedLearn' -ForegroundColor Cyan
Write-Host '========================================' -ForegroundColor Cyan
Write-Host ''

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
Write-Host 'üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:' -ForegroundColor Yellow
Write-Host ''

$port3000 = netstat -ano | Select-String ':3000' | Select-Object -First 1
$port3002 = netstat -ano | Select-String ':3002' | Select-Object -First 1
$port3001 = netstat -ano | Select-String ':3001' | Select-Object -First 1

if ($port3000) {
    $pid3000 = ($port3000 -split '\s+')[-1]
    Write-Host "  ‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä (3000): –†–∞–±–æ—Ç–∞–µ—Ç (PID: $pid3000)" -ForegroundColor Green
} else {
    Write-Host '  ‚ùå –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä (3000): –ù–µ –∑–∞–ø—É—â–µ–Ω' -ForegroundColor Red
}

if ($port3002) {
    $pid3002 = ($port3002 -split '\s+')[-1]
    Write-Host "  ‚úÖ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å (3002): –†–∞–±–æ—Ç–∞–µ—Ç (PID: $pid3002)" -ForegroundColor Green
} else {
    Write-Host '  ‚ùå –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å (3002): –ù–µ –∑–∞–ø—É—â–µ–Ω–∞' -ForegroundColor Red
}

if ($port3001) {
    $pid3001 = ($port3001 -split '\s+')[-1]
    Write-Host "  ‚úÖ APM Dashboard (3001): –†–∞–±–æ—Ç–∞–µ—Ç (PID: $pid3001)" -ForegroundColor Green
} else {
    Write-Host '  ‚ö†Ô∏è  APM Dashboard (3001): –ù–µ –∑–∞–ø—É—â–µ–Ω' -ForegroundColor Yellow
}

Write-Host ''
Write-Host '========================================' -ForegroundColor Cyan
Write-Host ''

# 2. –ü—Ä–æ—Ü–µ—Å—Å—ã Node.js
Write-Host 'üíª –ü—Ä–æ—Ü–µ—Å—Å—ã Node.js:' -ForegroundColor Yellow
Write-Host ''

$nodeProcesses = Get-Process node -ErrorAction SilentlyContinue
if ($nodeProcesses) {
    $nodeProcesses | Format-Table Id, ProcessName, @{Name='CPU (s)';Expression={$_.CPU};Format='N2'}, @{Name='Memory (MB)';Expression={[math]::Round($_.WorkingSet64/1MB, 2)}} -AutoSize
} else {
    Write-Host '  ‚ÑπÔ∏è  –ü—Ä–æ—Ü–µ—Å—Å—ã Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω—ã' -ForegroundColor Gray
}

Write-Host ''
Write-Host '========================================' -ForegroundColor Cyan
Write-Host ''

# 3. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
Write-Host 'üóÑÔ∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL:' -ForegroundColor Yellow
Write-Host ''

try {
    $env:PGPASSWORD = '1'
    $dbVersion = & 'C:\Program Files\PostgreSQL\17\bin\psql.exe' -U postgres -d medlearndb -t -c "SELECT version();" 2>&1
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host '  ‚úÖ PostgreSQL: –ü–æ–¥–∫–ª—é—á–µ–Ω–æ' -ForegroundColor Green
        
        # –ü–æ–¥—Å—á—ë—Ç –¥–∞–Ω–Ω—ã—Ö
        $userCount = & 'C:\Program Files\PostgreSQL\17\bin\psql.exe' -U postgres -d medlearndb -t -c "SELECT COUNT(*) FROM users;" 2>&1
        $testCount = & 'C:\Program Files\PostgreSQL\17\bin\psql.exe' -U postgres -d medlearndb -t -c "SELECT COUNT(*) FROM tests;" 2>&1
        $subjectCount = & 'C:\Program Files\PostgreSQL\17\bin\psql.exe' -U postgres -d medlearndb -t -c "SELECT COUNT(*) FROM subjects;" 2>&1
        
        Write-Host "  üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $($userCount.Trim())" -ForegroundColor Cyan
        Write-Host "  üìù –¢–µ—Å—Ç–æ–≤: $($testCount.Trim())" -ForegroundColor Cyan
        Write-Host "  üìö –ü—Ä–µ–¥–º–µ—Ç–æ–≤: $($subjectCount.Trim())" -ForegroundColor Cyan
    } else {
        Write-Host '  ‚ùå PostgreSQL: –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è' -ForegroundColor Red
        Write-Host "  –î–µ—Ç–∞–ª–∏: $dbVersion" -ForegroundColor Gray
    }
} catch {
    Write-Host '  ‚ùå PostgreSQL: –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω' -ForegroundColor Red
    Write-Host "  –û—à–∏–±–∫–∞: $($_.Exception.Message)" -ForegroundColor Gray
}

Write-Host ''
Write-Host '========================================' -ForegroundColor Cyan
Write-Host ''

# 4. Redis
Write-Host 'üî¥ Redis:' -ForegroundColor Yellow
Write-Host ''

$redisProcess = Get-Process redis-server -ErrorAction SilentlyContinue
if ($redisProcess) {
    Write-Host '  ‚úÖ Redis: –†–∞–±–æ—Ç–∞–µ—Ç' -ForegroundColor Green
} else {
    Write-Host '  ‚ö†Ô∏è  Redis: –ù–µ –∑–∞–ø—É—â–µ–Ω (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)' -ForegroundColor Yellow
}

Write-Host ''
Write-Host '========================================' -ForegroundColor Cyan
Write-Host ''

# 5. HTTP —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
Write-Host 'üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤:' -ForegroundColor Yellow
Write-Host ''

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
try {
    $response = Invoke-RestMethod -Uri "http://localhost:3000/api/health" -TimeoutSec 2 -ErrorAction Stop
    Write-Host '  ‚úÖ http://localhost:3000/api/health - OK' -ForegroundColor Green
} catch {
    Write-Host '  ‚ùå http://localhost:3000/api/health - –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω' -ForegroundColor Red
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
try {
    $response = Invoke-WebRequest -Uri "http://localhost:3000/register.html" -TimeoutSec 2 -ErrorAction Stop
    if ($response.StatusCode -eq 200) {
        Write-Host '  ‚úÖ http://localhost:3000/register.html - OK' -ForegroundColor Green
    }
} catch {
    Write-Host '  ‚ùå http://localhost:3000/register.html - –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω' -ForegroundColor Red
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
try {
    $response = Invoke-WebRequest -Uri "http://localhost:3002" -TimeoutSec 2 -ErrorAction Stop
    if ($response.StatusCode -eq 200) {
        Write-Host '  ‚úÖ http://localhost:3002 (–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å) - OK' -ForegroundColor Green
    }
} catch {
    Write-Host '  ‚ùå http://localhost:3002 (–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å) - –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω' -ForegroundColor Red
}

Write-Host ''
Write-Host '========================================' -ForegroundColor Cyan
Write-Host ''

# 6. –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
$allServicesRunning = $port3000 -and $port3002
$dbConnected = $LASTEXITCODE -eq 0

if ($allServicesRunning -and $dbConnected) {
    Write-Host '‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–∞!' -ForegroundColor Green
} elseif ($allServicesRunning) {
    Write-Host '‚ö†Ô∏è  –°–∏—Å—Ç–µ–º–∞ —á–∞—Å—Ç–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç (–ø—Ä–æ–±–ª–µ–º—ã —Å –ë–î)' -ForegroundColor Yellow
} else {
    Write-Host '‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞ –∏–ª–∏ –µ—Å—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã' -ForegroundColor Red
}

Write-Host ''
Write-Host 'üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:' -ForegroundColor Cyan
Write-Host '   .\start-all.bat  - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å—é —Å–∏—Å—Ç–µ–º—É' -ForegroundColor Gray
Write-Host '   .\stop-all.bat   - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å—é —Å–∏—Å—Ç–µ–º—É' -ForegroundColor Gray
Write-Host '   .\check-status.ps1 - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å (—ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç)' -ForegroundColor Gray
Write-Host ''
